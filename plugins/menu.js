const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")
const {runtime} = require('../lib/functions')
const axios = require('axios')

cmd({
  pattern: "menu",
  desc: "Commands panel",
  react: 'üìÉ',
  filename: __filename
}, async (bot, message, args, options) => {
  const { from, quoted, body, reply } = options;

  try {
    // Menu Text
    const menuText = `
‚ïí‚ú¶‚Ä¢¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑‚Ä¢‚ú¶
‚îÇ *Creator* : Lasmitha Praveeith
‚îÇ *Version* : v0.1
‚îÇ *Uptime*  : ${runtime(process.uptime())}
‚îÇ *RAM Usage* : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB
‚îÇ *Host Name* : ${require('os').hostname()}
‚ïò‚ú¶‚Ä¢¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑‚Ä¢‚ú¶
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
‚îÇüìÉ *LIST MENU*
‚îÇ   ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ _1_ *‚ùÇ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö menu‚ùÇ*
‚îÇ _2_ *‚ùÇ·¥è·¥°…¥·¥á Ä menu‚ùÇ*
‚îÇ _3_ *‚ùÇ…¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á…¥·¥ú‚ùÇ*
‚îÇ _4_ *‚ùÇ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ menu‚ùÇ*
‚îÇ _5_ *‚ùÇ·¥Ä…™ ·¥ç·¥á…¥·¥ú‚ùÇ*
‚îÇ _6_ *‚ùÇÍú±·¥á·¥Ä Ä·¥Ñ ú menu‚ùÇ*
‚îÇ _7_ *‚ùÇÍú±·¥õ…™·¥Ñ·¥ã Ä·¥õ menu‚ùÇ*
‚îÇ _8_ *‚ùÇÍú∞·¥ú…¥ menu‚ùÇ*
‚îÇ _9_ *‚ùÇ ô·¥ú…¢ menu‚ùÇ*
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫
*üåü Reply the Number you want to select*
> ¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è  ü·¥Ä·¥ã·¥Ä-·¥ç·¥Ö üí≠
`;

    // Send Menu Message
    const sentMenuMessage = await bot.sendMessage(from, {
      image: { url: "https://i.ibb.co/8DKVHKN/989f5b3ba02c6ae4a494537c8dad9cdb.jpg" },
      caption: menuText
    }, { quoted: message });

    const menuMessageId = sentMenuMessage.key.id;

    // Listen for replies to the menu message
    bot.ev.on("messages.upsert", async event => {
      const newMessage = event.messages[0];
      if (!newMessage.message) return;

      const userReply = newMessage.message.conversation || newMessage.message.extendedTextMessage?.text;
      const isReplyToMenu = newMessage.message.extendedTextMessage?.contextInfo.stanzaId === menuMessageId;

      if (isReplyToMenu) {
        let responseText = '';
        switch (userReply) {
          case '1':
            responseText = `‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
> ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥ç·¥á…¥·¥ú üíê
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
*üé∂ .Íú±·¥è…¥…¢*
> ( è·¥è·¥ú·¥õ·¥ú ô·¥á Íú±·¥è…¥…¢ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üìΩÔ∏è .·¥†…™·¥Ö·¥á·¥è*
> (  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üé¨ .Íú±…™…¥ ú·¥Ä ü·¥ÄÍú±·¥ú ô2*
> (Íú∞…™ ü·¥ç ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üí∏ .Íú∞ ô*
> (Íú∞ ô ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üí≥ .·¥õ…™·¥ã·¥õ·¥è·¥ã*
> (·¥õ…™·¥ã·¥õ·¥è·¥ã ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üïØÔ∏è .…™…¢*
> (…™…¥·¥õ·¥Ä…¢ Ä·¥Ä·¥ç ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üìö .…¢·¥Ö Ä…™·¥†·¥á*
> (…¢·¥è·¥è…¢·¥á ü Íú∞…™ ü·¥á ·¥Ö·¥è·¥° ü·¥è·¥Ä·¥Ö)

*üëæ .·¥Ä·¥ò·¥ã*
> (·¥Ä·¥ò·¥ò ·¥Ä·¥ò·¥ã ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üè∑Ô∏è .·¥çÍú∞…™ Ä·¥á*
> (·¥ç…™·¥Ö…™·¥ÄÍú∞…™ ü·¥á Íú∞…™ ü·¥á ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)

*üîû .x·¥†…™·¥Ö·¥á·¥è*
> (Íú±·¥áx ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö)
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã

> > ¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è  ü·¥Ä·¥ã·¥Ä-·¥ç·¥Ö üí≠`;
            break;
          case '2':
            responseText = `kk`;
            break;
          case '3':
            responseText = `kk`;
            break;
          case '4':
            responseText = `kk`;
            break;
          case '5':
            responseText = `kk`;
            break;
          case '6':
            responseText = `kk`;
            break;
          case '7':
            responseText = `kk`;
            break;
          case '8':
            responseText = `kk`;
            break;
          case '9':
            responseText = `kk`;
            break;
          default:
            responseText = "Invalid option! Please reply with a number from 1 to 9.";
        }

        // Send the appropriate response
        await bot.sendMessage(from, { text: responseText }, { quoted: newMessage });
      }
    });
  } catch (error) {
    console.error(error);
    reply(`Error: ${error.message}`);
  }
});
